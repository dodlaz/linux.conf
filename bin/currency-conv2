#!/bin/bash

LIST="currency.list"

ColorOff='\033[0m'
Color='\033[1;31m'

#Flags
flagSelf=false
flagNewLine=false

currency() {
    if ! [[ $1 = *[[:digit:]]* && $2 != "" && $3 != "" ]]; then
        echo "Error" >&2
        exit 3
    fi
    local f=false

    #From
    for m in $2; do
        #Get currency code
        fList="$(grep -i ":$m:" $LIST)"        
        if [ -z "$fList" ]; then
            echo "Error: Can't convert \"$m\""
            exit 5
        else
            fCode="$(echo "$fList" | cut -d':' -f2)"
        fi

        #new line
        if [[ "$flagNewLine" == true && "$f" == true ]]; then echo ""; fi; f=true

        #To
        for n in $3; do
            #Get currency code
            tList="$(grep -i ":$n:" $LIST)"        
            if [ -z "$tList" ]; then
                echo "Error: Can't convert \"$n\""
                exit 5
            else
                tCode="$(echo "$tList" | cut -d':' -f2)"
            fi


            if [[ "$fCode" != "$tCode" ]]; then
                result="$(wget -qO- "http://www.google.com/finance/converter?a=$1&from=$fCode&to=$tCode" |  sed '/res/!d;s/<[^>]*>//g')";
                if [[ "$result" != "" ]]; then
                    echo -ne "$Color$(echo -n $result | cut -d' ' -f1) $ColorOff"
                    echo -ne "$(echo $result | cut -d' ' -f2-3)"
                    echo -ne "$Color $(echo -n $result | cut -d' ' -f4) $ColorOff"
                    echo -ne $result | cut -d' ' -f5-
                else
                    echo "Error: Converting $fCode to $tCode" >&2
                fi
            fi

            
            #X -> X
            if [[ "$fCode" == "$tCode" && "$flagSelf" == true ]]; then
                echo -e "$Color$1$ColorOff $fCode = $Color$1$ColorOff $tCode"
            fi

        done        
    done
}

HELP() {
    echo -e "Help:\ncurrency-conv [OPTION]... [VALUE] [[FROM] [TO]]"
    exit 0;
}
LIST() {
    cat $LIST
    exit 0;
}


while getopts ':v:f:t:hlscn' flag; do
  case "${flag}" in

    n) flagNewLine=true;;
    s) flagSelf=true;;
    c) Color='';;

    h) HELP;;
    l) LIST;;
    
    v) value=${OPTARG};;
    f) from=${OPTARG};;
    t) to=${OPTARG};;
    
    *)
        echo -e "Unexpected option ${flag}" >&2;
        exit 1;
        ;;
  esac
done
shift $((OPTIND-1))




args=( "$@" )
n=0
if [ -z "$value" ]; then
   value="${args[$n]}"
   ((n++))
fi
if [ -z "$from" ]; then
   from="${args[$n]}"
   ((n++))
fi
if [ -z "$to" ]; then
   to="${args[$n]}"
   ((n++))
fi

# Check if amount is a nubber
if [[ $value == "" ]]; then
    value=1 #defult amount 1
elif ! [[ $value = *[[:digit:]]* ]] ; then
   echo "Error: Not a number" >&2
   exit 2
else
    value="$(echo $value | bc -l)"
fi



if [[ $value != "" && $from != "" && $to != "" ]]; then
    currency $value "$from" "$to"
elif [[ $value != "" && $from != "" ]]; then
    currency $value "$from" "SEK USD EUR GBP BTC"
elif [[ $value != "" ]]; then
    currency $value "SEK USD EUR GBP BTC" "SEK"            
fi






